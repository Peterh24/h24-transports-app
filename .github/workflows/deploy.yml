name: Deploy H24 Transport App

# Workflow principal qui utilise le workflow réutilisable
# Plus simple, plus lisible et plus facile à maintenir

on:
  push:
    branches:
      - main     # Production
      - develop  # Development

jobs:
  # Job pour déploiement automatique basé sur les branches
  deploy-auto:
    if: github.event_name == 'push'
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
      dockerfile_path: 'docker/images/nginx/Dockerfile'
      prepare_command: 'npm ci && npm run build'
      node_version: '18'
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}

  # Job pour déploiement manuel
  deploy-manual:
    if: github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      environment: ${{ github.event.inputs.environment }}
      dockerfile_path: 'docker/images/nginx/Dockerfile'
      prepare_command: 'npm ci && npm run build'
      node_version: '18'
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}

  # Job optionnel pour les notifications
  notify:
    needs: [deploy-auto, deploy-manual]
    if: always() && (needs.deploy-auto.result != 'skipped' || needs.deploy-manual.result != 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Deployment notification
        run: |
          if [[ "${{ needs.deploy-auto.result }}" == "success" || "${{ needs.deploy-manual.result }}" == "success" ]]; then
            echo "✅ Déploiement réussi!"
          else
            echo "❌ Échec du déploiement"
            exit 1
          fi
